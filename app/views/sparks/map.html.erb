<div id='map'></div>

<script type='text/javascript'>
    var markers = new L.MarkerClusterGroup;

    L.MarkerClusterGroup.include({
        fromGeoJSON: function (my_locations, sparkPoints) {
            this.my_locations = my_locations;
            this.sparkPoints = sparkPoints;
            this.filter();
        },

        filter: function (f) {
            f = f || function (m) { return true; }
            var markers = Array();
            for (var i = 0; i < this.my_locations.length; i++) {
                var a = this.my_locations[i];
                if (!f(a)) { continue; }
                var title = a[2];
                var marker = L.marker(new L.LatLng(a[0], a[1]), {
                    icon: L.mapbox.marker.icon({'marker-symbol': 'post', 'marker-color': '0044FF'}),
                    title: title
                });
                marker.bindPopup(title);
                markers.push(marker);
            }

            for (var i = 0; i < this.sparkPoints.length; i++) {
                var a = this.sparkPoints[i];
                if (!f(a)) { continue; }
                var title = a[2];
                var marker = L.marker(new L.LatLng(a[0], a[1]), {
                    icon: L.mapbox.marker.icon({'marker-symbol': 'post', 'marker-color': '0044FF'}),
                    title: title
                });
                marker.bindPopup(title);
                markers.push(marker);
            }

            this.clearLayers();
            this.addLayers(markers);

        }
    });

    var map = L.mapbox.map('map', 'examples.map-uci7ul8p')
        // map.addLayer(L.tileLayer('http://tile.stamen.com/watercolor/{z}/{x}/{y}.jpg'));
        map.setZoom
        // map.setView([-37.82, 175.215], 14);
        // [<%#= @destination.latitude %>, <%#= @destination.longitude %>], 6


    // zoom the map to fit the bounds of the markers:
    setTimeout(function(){map.fitBounds(markers.getBounds())}, 500);


    markers.fromGeoJSON(<%= raw(@my_locations) %>, <%= raw(@nearby_sparks_for_map) %>);
    map.addLayer(markers);
    // var filter = L.DomUtil.get('filter');

    L.DomEvent.on(all, 'click', function (e) {
        cluster.filter();
    })


</script>


